{"version":3,"sources":["webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./app/app.module.ts","webpack:///./app/product-manager.component.css","webpack:///./app/product-manager.component.html","webpack:///./app/product-manager.component.ts","webpack:///./app/shared/dataService.ts","webpack:///./environments/environment.ts","webpack:///./main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { ProductManagerComponent } from './product-manager.component';\r\nimport { DataService } from './shared/dataService';\r\n\r\n\r\nlet routes = [];\r\n\r\n@NgModule({\r\n    declarations: [\r\n        ProductManagerComponent\r\n    ],\r\n\r\n    imports: [\r\n        BrowserModule,\r\n        HttpClientModule,\r\n\r\n        RouterModule.forRoot(routes, {\r\n            useHash: true,\r\n            enableTracing: false,\r\n            onSameUrlNavigation: \"reload\"\r\n        })\r\n\r\n    ],\r\n\r\n    providers: [DataService],\r\n\r\n    bootstrap: [ProductManagerComponent]\r\n})\r\n\r\nexport class AppModule { }\r\n","module.exports = \".border {\\r\\n    background-color: #262626;\\r\\n}\\r\\n\\r\\n.product-info {\\r\\n    margin: 10px;\\r\\n}\\r\\n\\r\\n.product-props {\\r\\n    list-style-type: none;\\r\\n    color: white;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlByb2R1Y3RNYW5hZ2VyL2FwcC9wcm9kdWN0LW1hbmFnZXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLHlCQUF5QjtBQUM3Qjs7QUFFQTtJQUNJLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxxQkFBcUI7SUFDckIsWUFBWTtBQUNoQiIsImZpbGUiOiJQcm9kdWN0TWFuYWdlci9hcHAvcHJvZHVjdC1tYW5hZ2VyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYm9yZGVyIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMyNjI2MjY7XHJcbn1cclxuXHJcbi5wcm9kdWN0LWluZm8ge1xyXG4gICAgbWFyZ2luOiAxMHB4O1xyXG59XHJcblxyXG4ucHJvZHVjdC1wcm9wcyB7XHJcbiAgICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbn1cclxuIl19 */\"","module.exports = \"<div>\\n  <h4>Available Products</h4>\\n</div>\\n\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"product-info col-md-3\\\" *ngFor=\\\"let p of availableProducts\\\">\\r\\n        <div class=\\\"border rounded p-3\\\">\\r\\n            <input type=\\\"image\\\" class=\\\"image-upload\\\" src=\\\"https://img.icons8.com/ios/50/000000/compact-camera.png\\\" />\\r\\n            <!--<div class=\\\"js--image-preview\\\"></div>\\r\\n            <!----<div class=\\\"upload-options\\\">\\r\\n                <label>\\r\\n                    <input type=\\\"file\\\" class=\\\"image-upload\\\" accept=\\\"image/*\\\" />\\r\\n                </label>\\r\\n            </div>-->\\r\\n            <ul class=\\\"product-props\\\">\\r\\n                <li><h3>{{ p.name }}</h3></li>\\r\\n                <li>Price: {{ p.price }} $</li>\\r\\n            </ul>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\n\\n<router-outlet></router-outlet>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { Router } from '@angular/router';\r\nimport { NgForm } from '@angular/forms';\r\nimport { DataService } from 'ProductManager/app/shared/dataService';\r\n\n\n@Component({\n  selector: 'product-manager',\n  templateUrl: './product-manager.component.html',\n  styleUrls: ['./product-manager.component.css']\n})\nexport class ProductManagerComponent implements OnInit {\n    title = 'ProductManager';\n\n    public availableProducts = [];\r\n\r\n    constructor(private data: DataService, private router: Router, private location: Location) {\r\n\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.loadAvailableProducts();\r\n    }\r\n\r\n    reloadComponent(): void {\r\n        location.reload();\r\n    }\r\n\r\n    loadAvailableProducts(): void {\r\n\r\n        this.data.loadAvailableProducts()\r\n            .subscribe(success => {\r\n                if (success) {\r\n                    this.availableProducts = this.data.availableProducts;\r\n                }\r\n            })\r\n    }\n}\n","ï»¿import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { map } from \"rxjs/operators\";\r\n\r\n@Injectable()\r\nexport class DataService {\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    public availableProducts = [];\r\n    loadAvailableProducts(): Observable<boolean> {\r\n        return this.http.get(\"/api/WarehouseApi/ShowAvailableProducts\")\r\n            .pipe(\r\n                map((data: any[]) => {\r\n                this.availableProducts = data;\r\n                    return true;\r\n                }));\r\n    }\r\n\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}